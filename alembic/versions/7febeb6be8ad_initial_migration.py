"""Initial Migration

Revision ID: 7febeb6be8ad
Revises: 
Create Date: 2025-05-18 03:35:34.903280

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7febeb6be8ad'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=True)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('username', sa.String(length=256), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('groups',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=True)
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.create_index(op.f('ix_groups_organization_id'), 'groups', ['organization_id'], unique=False)
    op.create_table('organization_users',
    sa.Column('organization_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('role', sa.Enum('Owner', 'Admin', 'User', name='userrole'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('organization_id', 'user_id')
    )
    op.create_index(op.f('ix_organization_users_organization_id'), 'organization_users', ['organization_id'], unique=True)
    op.create_index(op.f('ix_organization_users_user_id'), 'organization_users', ['user_id'], unique=True)
    op.create_table('regsitry_namespaces',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=True),
    sa.Column('private', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('upstream_server', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_regsitry_namespaces_id'), 'regsitry_namespaces', ['id'], unique=True)
    op.create_index(op.f('ix_regsitry_namespaces_name'), 'regsitry_namespaces', ['name'], unique=True)
    op.create_index(op.f('ix_regsitry_namespaces_organization_id'), 'regsitry_namespaces', ['organization_id'], unique=False)
    op.create_table('group_namespaces',
    sa.Column('group_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('namespace_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('permission', sa.Enum('Read', 'Write', 'ReadWrite', name='accesspermission'), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['namespace_id'], ['regsitry_namespaces.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'namespace_id')
    )
    op.create_index(op.f('ix_group_namespaces_group_id'), 'group_namespaces', ['group_id'], unique=True)
    op.create_index(op.f('ix_group_namespaces_namespace_id'), 'group_namespaces', ['namespace_id'], unique=True)
    op.create_table('regsitry_repositories',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('namespace_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['namespace_id'], ['regsitry_namespaces.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('namespace_id', 'name', name='ix_regsitry_repositories_namespace_name')
    )
    op.create_index(op.f('ix_regsitry_repositories_id'), 'regsitry_repositories', ['id'], unique=True)
    op.create_table('user_groups',
    sa.Column('user_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_index(op.f('ix_user_groups_group_id'), 'user_groups', ['group_id'], unique=True)
    op.create_index(op.f('ix_user_groups_user_id'), 'user_groups', ['user_id'], unique=True)
    op.create_table('regsitry_manifests',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('repository_id', sa.Uuid(), nullable=False),
    sa.Column('digest_sha256', sa.LargeBinary(), nullable=False),
    sa.Column('tag_name', sa.String(length=256), nullable=True),
    sa.Column('architecture', sa.String(length=50), nullable=False),
    sa.Column('signature', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['regsitry_repositories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_regsitry_manifests_digest_sha256'), 'regsitry_manifests', ['digest_sha256'], unique=False)
    op.create_index(op.f('ix_regsitry_manifests_id'), 'regsitry_manifests', ['id'], unique=True)
    op.create_index(op.f('ix_regsitry_manifests_repository_id'), 'regsitry_manifests', ['repository_id'], unique=False)
    op.create_index(op.f('ix_regsitry_manifests_tag_name'), 'regsitry_manifests', ['tag_name'], unique=False)
    op.create_table('regsitry_layers',
    sa.Column('id', sa.Uuid(), autoincrement=False, nullable=False),
    sa.Column('manifest_id', sa.Uuid(), nullable=False),
    sa.Column('digest_sha256', sa.LargeBinary(), nullable=False),
    sa.Column('position', sa.SmallInteger(), nullable=False),
    sa.Column('size', sa.BigInteger(), nullable=False),
    sa.Column('storage_provider', sa.String(length=255), nullable=False),
    sa.Column('storage_info', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['manifest_id'], ['regsitry_manifests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_regsitry_layers_digest_sha256'), 'regsitry_layers', ['digest_sha256'], unique=False)
    op.create_index(op.f('ix_regsitry_layers_id'), 'regsitry_layers', ['id'], unique=True)
    op.create_index(op.f('ix_regsitry_layers_manifest_id'), 'regsitry_layers', ['manifest_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_regsitry_layers_manifest_id'), table_name='regsitry_layers')
    op.drop_index(op.f('ix_regsitry_layers_id'), table_name='regsitry_layers')
    op.drop_index(op.f('ix_regsitry_layers_digest_sha256'), table_name='regsitry_layers')
    op.drop_table('regsitry_layers')
    op.drop_index(op.f('ix_regsitry_manifests_tag_name'), table_name='regsitry_manifests')
    op.drop_index(op.f('ix_regsitry_manifests_repository_id'), table_name='regsitry_manifests')
    op.drop_index(op.f('ix_regsitry_manifests_id'), table_name='regsitry_manifests')
    op.drop_index(op.f('ix_regsitry_manifests_digest_sha256'), table_name='regsitry_manifests')
    op.drop_table('regsitry_manifests')
    op.drop_index(op.f('ix_user_groups_user_id'), table_name='user_groups')
    op.drop_index(op.f('ix_user_groups_group_id'), table_name='user_groups')
    op.drop_table('user_groups')
    op.drop_index(op.f('ix_regsitry_repositories_id'), table_name='regsitry_repositories')
    op.drop_table('regsitry_repositories')
    op.drop_index(op.f('ix_group_namespaces_namespace_id'), table_name='group_namespaces')
    op.drop_index(op.f('ix_group_namespaces_group_id'), table_name='group_namespaces')
    op.drop_table('group_namespaces')
    op.drop_index(op.f('ix_regsitry_namespaces_organization_id'), table_name='regsitry_namespaces')
    op.drop_index(op.f('ix_regsitry_namespaces_name'), table_name='regsitry_namespaces')
    op.drop_index(op.f('ix_regsitry_namespaces_id'), table_name='regsitry_namespaces')
    op.drop_table('regsitry_namespaces')
    op.drop_index(op.f('ix_organization_users_user_id'), table_name='organization_users')
    op.drop_index(op.f('ix_organization_users_organization_id'), table_name='organization_users')
    op.drop_table('organization_users')
    op.drop_index(op.f('ix_groups_organization_id'), table_name='groups')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###
